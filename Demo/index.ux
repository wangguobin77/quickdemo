<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <text class="title">欢迎打开{{title}}</text>
    <!-- 点击跳转详情页 -->
    <input class="btn" type="button" value="跳转到详情页" onclick="routeDetail" />
    <input class="btn" type="button" value="跳转到tab页" onclick="showTabs" />
    <input class="btn" type="button" value="分享" onclick="showDetail('Interface/Share')"/>
   
  </div>
</template>



<script>
import router from '@system.router'
// import fetch from '@system.fetch'
export default {
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    private: {
        title: '示例页面',
        msg:'',//回传参数
    },

    routeDetail () {
        // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
        router.push ({
        uri: '/DemoDetail'
        })
    },
    showTabs: function (uri) {
        router.push({
        uri: '/Component/Tabs',
        //传递的参数 key : this.title
        params: { key: this.title,length:5}
        })
    },
    showDetail: function (uri) {
        router.push({
            uri: uri
        })
    },
    /**
     * 接受回传参数
     */
    onShow () {
      // 页面被切换显示时，从数据中检查是否有页面B传递来的数据
      const data = this.$app.getAppData('dataFromB')
      if (data && data.destPageName === 'pageA') {
        // 获取回传给本页面的数据
        this.msg = data.params
        console.info(JSON.stringify(this.msg))
      }
    }
 
}

</script>

<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }
  .tabsa{
    position: fixed;
    bottom:0;
  }
</style>
